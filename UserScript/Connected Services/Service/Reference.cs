//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UserScript.Service {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SSC_TriColorLightOptions", Namespace="http://schemas.datacontract.org/2004/07/APAS.ServiceContract.Wcf")]
    public enum SSC_TriColorLightOptions : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Red = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Yellow = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Green = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SSC_PresetPositionInfo", Namespace="http://schemas.datacontract.org/2004/07/APAS.ServiceContract.Wcf")]
    [System.SerializableAttribute()]
    public partial class SSC_PresetPositionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AxisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAbsModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SpeedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Axis {
            get {
                return this.AxisField;
            }
            set {
                if ((object.ReferenceEquals(this.AxisField, value) != true)) {
                    this.AxisField = value;
                    this.RaisePropertyChanged("Axis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAbsMode {
            get {
                return this.IsAbsModeField;
            }
            set {
                if ((this.IsAbsModeField.Equals(value) != true)) {
                    this.IsAbsModeField = value;
                    this.RaisePropertyChanged("IsAbsMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((this.SpeedField.Equals(value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SSC_IOStatusEnum", Namespace="http://schemas.datacontract.org/2004/07/APAS.ServiceContract.Wcf")]
    public enum SSC_IOStatusEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disabled = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Enabled = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SSC_PMUnitEnum", Namespace="http://schemas.datacontract.org/2004/07/APAS.ServiceContract.Wcf")]
    public enum SSC_PMUnitEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        dBm = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        dB = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        mW = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        mA = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SSC_PMRangeEnum", Namespace="http://schemas.datacontract.org/2004/07/APAS.ServiceContract.Wcf")]
    public enum SSC_PMRangeEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RANGE1 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RANGE2 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RANGE3 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RANGE4 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RANGE5 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RANGE6 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AUTO = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReadPresetPositionResponse", Namespace="http://schemas.datacontract.org/2004/07/APAS.ServiceContract.Wcf.Responses")]
    [System.SerializableAttribute()]
    public partial class ReadPresetPositionResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AbsPositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AxisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAbsModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMovableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LMCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RelPositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SpeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AbsPosition {
            get {
                return this.AbsPositionField;
            }
            set {
                if ((this.AbsPositionField.Equals(value) != true)) {
                    this.AbsPositionField = value;
                    this.RaisePropertyChanged("AbsPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Axis {
            get {
                return this.AxisField;
            }
            set {
                if ((object.ReferenceEquals(this.AxisField, value) != true)) {
                    this.AxisField = value;
                    this.RaisePropertyChanged("Axis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAbsMode {
            get {
                return this.IsAbsModeField;
            }
            set {
                if ((this.IsAbsModeField.Equals(value) != true)) {
                    this.IsAbsModeField = value;
                    this.RaisePropertyChanged("IsAbsMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMovable {
            get {
                return this.IsMovableField;
            }
            set {
                if ((this.IsMovableField.Equals(value) != true)) {
                    this.IsMovableField = value;
                    this.RaisePropertyChanged("IsMovable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LMC {
            get {
                return this.LMCField;
            }
            set {
                if ((object.ReferenceEquals(this.LMCField, value) != true)) {
                    this.LMCField = value;
                    this.RaisePropertyChanged("LMC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RelPosition {
            get {
                return this.RelPositionField;
            }
            set {
                if ((this.RelPositionField.Equals(value) != true)) {
                    this.RelPositionField = value;
                    this.RaisePropertyChanged("RelPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((this.SpeedField.Equals(value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AxisStatusResponse", Namespace="http://schemas.datacontract.org/2004/07/APAS.ServiceContract.Wcf.Responses")]
    [System.SerializableAttribute()]
    public partial class AxisStatusResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AbsPositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AxisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBusyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHomedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LmuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RelPositionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AbsPosition {
            get {
                return this.AbsPositionField;
            }
            set {
                if ((this.AbsPositionField.Equals(value) != true)) {
                    this.AbsPositionField = value;
                    this.RaisePropertyChanged("AbsPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Axis {
            get {
                return this.AxisField;
            }
            set {
                if ((object.ReferenceEquals(this.AxisField, value) != true)) {
                    this.AxisField = value;
                    this.RaisePropertyChanged("Axis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBusy {
            get {
                return this.IsBusyField;
            }
            set {
                if ((this.IsBusyField.Equals(value) != true)) {
                    this.IsBusyField = value;
                    this.RaisePropertyChanged("IsBusy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHomed {
            get {
                return this.IsHomedField;
            }
            set {
                if ((this.IsHomedField.Equals(value) != true)) {
                    this.IsHomedField = value;
                    this.RaisePropertyChanged("IsHomed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lmu {
            get {
                return this.LmuField;
            }
            set {
                if ((object.ReferenceEquals(this.LmuField, value) != true)) {
                    this.LmuField = value;
                    this.RaisePropertyChanged("Lmu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RelPosition {
            get {
                return this.RelPositionField;
            }
            set {
                if ((this.RelPositionField.Equals(value) != true)) {
                    this.RelPositionField = value;
                    this.RaisePropertyChanged("RelPosition");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlignmentAreaScanResponse", Namespace="http://schemas.datacontract.org/2004/07/APAS.ServiceContract.Wcf.Responses")]
    [System.SerializableAttribute()]
    public partial class AlignmentAreaScanResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AxisHorizontalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AxisVeritcalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LMCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PeakPositionHorizontalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PeakPositionVeritcalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PeakValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AxisHorizontal {
            get {
                return this.AxisHorizontalField;
            }
            set {
                if ((object.ReferenceEquals(this.AxisHorizontalField, value) != true)) {
                    this.AxisHorizontalField = value;
                    this.RaisePropertyChanged("AxisHorizontal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AxisVeritcal {
            get {
                return this.AxisVeritcalField;
            }
            set {
                if ((object.ReferenceEquals(this.AxisVeritcalField, value) != true)) {
                    this.AxisVeritcalField = value;
                    this.RaisePropertyChanged("AxisVeritcal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LMC {
            get {
                return this.LMCField;
            }
            set {
                if ((object.ReferenceEquals(this.LMCField, value) != true)) {
                    this.LMCField = value;
                    this.RaisePropertyChanged("LMC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PeakPositionHorizontal {
            get {
                return this.PeakPositionHorizontalField;
            }
            set {
                if ((this.PeakPositionHorizontalField.Equals(value) != true)) {
                    this.PeakPositionHorizontalField = value;
                    this.RaisePropertyChanged("PeakPositionHorizontal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PeakPositionVeritcal {
            get {
                return this.PeakPositionVeritcalField;
            }
            set {
                if ((this.PeakPositionVeritcalField.Equals(value) != true)) {
                    this.PeakPositionVeritcalField = value;
                    this.RaisePropertyChanged("PeakPositionVeritcal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PeakValue {
            get {
                return this.PeakValueField;
            }
            set {
                if ((this.PeakValueField.Equals(value) != true)) {
                    this.PeakValueField = value;
                    this.RaisePropertyChanged("PeakValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlignmentNdResponse", Namespace="http://schemas.datacontract.org/2004/07/APAS.ServiceContract.Wcf.Responses")]
    [System.SerializableAttribute()]
    public partial class AlignmentNdResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private global::UserScript.Service.Alignment1DResponse[] Alignment1DResponseCollectionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public global::UserScript.Service.Alignment1DResponse[] Alignment1DResponseCollection {
            get {
                return this.Alignment1DResponseCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.Alignment1DResponseCollectionField, value) != true)) {
                    this.Alignment1DResponseCollectionField = value;
                    this.RaisePropertyChanged("Alignment1DResponseCollection");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Alignment1DResponse", Namespace="http://schemas.datacontract.org/2004/07/APAS.ServiceContract.Wcf.Responses")]
    [System.SerializableAttribute()]
    public partial class Alignment1DResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AxisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LMCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PeakPositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PeakValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Axis {
            get {
                return this.AxisField;
            }
            set {
                if ((object.ReferenceEquals(this.AxisField, value) != true)) {
                    this.AxisField = value;
                    this.RaisePropertyChanged("Axis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LMC {
            get {
                return this.LMCField;
            }
            set {
                if ((object.ReferenceEquals(this.LMCField, value) != true)) {
                    this.LMCField = value;
                    this.RaisePropertyChanged("LMC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PeakPosition {
            get {
                return this.PeakPositionField;
            }
            set {
                if ((this.PeakPositionField.Equals(value) != true)) {
                    this.PeakPositionField = value;
                    this.RaisePropertyChanged("PeakPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PeakValue {
            get {
                return this.PeakValueField;
            }
            set {
                if ((this.PeakValueField.Equals(value) != true)) {
                    this.PeakValueField = value;
                    this.RaisePropertyChanged("PeakValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlignmentAngleTuningResponse", Namespace="http://schemas.datacontract.org/2004/07/APAS.ServiceContract.Wcf.Responses")]
    [System.SerializableAttribute()]
    public partial class AlignmentAngleTuningResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AxisLinearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AxisRotatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PeakPosition1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PeakPosition2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PeakValue1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PeakValue2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PredictedAngleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AxisLinear {
            get {
                return this.AxisLinearField;
            }
            set {
                if ((object.ReferenceEquals(this.AxisLinearField, value) != true)) {
                    this.AxisLinearField = value;
                    this.RaisePropertyChanged("AxisLinear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AxisRotating {
            get {
                return this.AxisRotatingField;
            }
            set {
                if ((object.ReferenceEquals(this.AxisRotatingField, value) != true)) {
                    this.AxisRotatingField = value;
                    this.RaisePropertyChanged("AxisRotating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PeakPosition1 {
            get {
                return this.PeakPosition1Field;
            }
            set {
                if ((this.PeakPosition1Field.Equals(value) != true)) {
                    this.PeakPosition1Field = value;
                    this.RaisePropertyChanged("PeakPosition1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PeakPosition2 {
            get {
                return this.PeakPosition2Field;
            }
            set {
                if ((this.PeakPosition2Field.Equals(value) != true)) {
                    this.PeakPosition2Field = value;
                    this.RaisePropertyChanged("PeakPosition2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PeakValue1 {
            get {
                return this.PeakValue1Field;
            }
            set {
                if ((this.PeakValue1Field.Equals(value) != true)) {
                    this.PeakValue1Field = value;
                    this.RaisePropertyChanged("PeakValue1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PeakValue2 {
            get {
                return this.PeakValue2Field;
            }
            set {
                if ((this.PeakValue2Field.Equals(value) != true)) {
                    this.PeakValue2Field = value;
                    this.RaisePropertyChanged("PeakValue2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PredictedAngle {
            get {
                return this.PredictedAngleField;
            }
            set {
                if ((this.PredictedAngleField.Equals(value) != true)) {
                    this.PredictedAngleField = value;
                    this.RaisePropertyChanged("PredictedAngle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlignmentCentralAlignResponse", Namespace="http://schemas.datacontract.org/2004/07/APAS.ServiceContract.Wcf.Responses")]
    [System.SerializableAttribute()]
    public partial class AlignmentCentralAlignResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AxisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LMCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PeakPosition1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PeakPosition2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PeakValue1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PeakValue2Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Axis {
            get {
                return this.AxisField;
            }
            set {
                if ((object.ReferenceEquals(this.AxisField, value) != true)) {
                    this.AxisField = value;
                    this.RaisePropertyChanged("Axis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LMC {
            get {
                return this.LMCField;
            }
            set {
                if ((object.ReferenceEquals(this.LMCField, value) != true)) {
                    this.LMCField = value;
                    this.RaisePropertyChanged("LMC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PeakPosition1 {
            get {
                return this.PeakPosition1Field;
            }
            set {
                if ((this.PeakPosition1Field.Equals(value) != true)) {
                    this.PeakPosition1Field = value;
                    this.RaisePropertyChanged("PeakPosition1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PeakPosition2 {
            get {
                return this.PeakPosition2Field;
            }
            set {
                if ((this.PeakPosition2Field.Equals(value) != true)) {
                    this.PeakPosition2Field = value;
                    this.RaisePropertyChanged("PeakPosition2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PeakValue1 {
            get {
                return this.PeakValue1Field;
            }
            set {
                if ((this.PeakValue1Field.Equals(value) != true)) {
                    this.PeakValue1Field = value;
                    this.RaisePropertyChanged("PeakValue1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PeakValue2 {
            get {
                return this.PeakValue2Field;
            }
            set {
                if ((this.PeakValue2Field.Equals(value) != true)) {
                    this.PeakValue2Field = value;
                    this.RaisePropertyChanged("PeakValue2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Service.ISystemService")]
    public interface ISystemService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_Powermeter_ZeroOutput", ReplyAction="http://tempuri.org/ISystemService/__SSC_Powermeter_ZeroOutputResponse")]
        void @__SSC_Powermeter_ZeroOutput(string caption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_Powermeter_ZeroOutput", ReplyAction="http://tempuri.org/ISystemService/__SSC_Powermeter_ZeroOutputResponse")]
        System.Threading.Tasks.Task @__SSC_Powermeter_ZeroOutputAsync(string caption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_Powermeter_Read", ReplyAction="http://tempuri.org/ISystemService/__SSC_Powermeter_ReadResponse")]
        double @__SSC_Powermeter_Read(string caption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_Powermeter_Read", ReplyAction="http://tempuri.org/ISystemService/__SSC_Powermeter_ReadResponse")]
        System.Threading.Tasks.Task<double> @__SSC_Powermeter_ReadAsync(string caption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_LogInfo", ReplyAction="http://tempuri.org/ISystemService/__SSC_LogInfoResponse")]
        void @__SSC_LogInfo(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_LogInfo", ReplyAction="http://tempuri.org/ISystemService/__SSC_LogInfoResponse")]
        System.Threading.Tasks.Task @__SSC_LogInfoAsync(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_LogError", ReplyAction="http://tempuri.org/ISystemService/__SSC_LogErrorResponse")]
        void @__SSC_LogError(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_LogError", ReplyAction="http://tempuri.org/ISystemService/__SSC_LogErrorResponse")]
        System.Threading.Tasks.Task @__SSC_LogErrorAsync(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_LogWarn", ReplyAction="http://tempuri.org/ISystemService/__SSC_LogWarnResponse")]
        void @__SSC_LogWarn(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_LogWarn", ReplyAction="http://tempuri.org/ISystemService/__SSC_LogWarnResponse")]
        System.Threading.Tasks.Task @__SSC_LogWarnAsync(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_ShowMessageBox", ReplyAction="http://tempuri.org/ISystemService/__SSC_ShowMessageBoxResponse")]
        void @__SSC_ShowMessageBox(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_ShowMessageBox", ReplyAction="http://tempuri.org/ISystemService/__SSC_ShowMessageBoxResponse")]
        System.Threading.Tasks.Task @__SSC_ShowMessageBoxAsync(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_ShowWarningMessageBox", ReplyAction="http://tempuri.org/ISystemService/__SSC_ShowWarningMessageBoxResponse")]
        void @__SSC_ShowWarningMessageBox(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_ShowWarningMessageBox", ReplyAction="http://tempuri.org/ISystemService/__SSC_ShowWarningMessageBoxResponse")]
        System.Threading.Tasks.Task @__SSC_ShowWarningMessageBoxAsync(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_ShowErrorMessageBox", ReplyAction="http://tempuri.org/ISystemService/__SSC_ShowErrorMessageBoxResponse")]
        void @__SSC_ShowErrorMessageBox(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_ShowErrorMessageBox", ReplyAction="http://tempuri.org/ISystemService/__SSC_ShowErrorMessageBoxResponse")]
        System.Threading.Tasks.Task @__SSC_ShowErrorMessageBoxAsync(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_ShowYesNoMessageBox", ReplyAction="http://tempuri.org/ISystemService/__SSC_ShowYesNoMessageBoxResponse")]
        bool @__SSC_ShowYesNoMessageBox(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_ShowYesNoMessageBox", ReplyAction="http://tempuri.org/ISystemService/__SSC_ShowYesNoMessageBoxResponse")]
        System.Threading.Tasks.Task<bool> @__SSC_ShowYesNoMessageBoxAsync(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_ShowImage", ReplyAction="http://tempuri.org/ISystemService/__SSC_ShowImageResponse")]
        void @__SSC_ShowImage(byte[] imageStream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_ShowImage", ReplyAction="http://tempuri.org/ISystemService/__SSC_ShowImageResponse")]
        System.Threading.Tasks.Task @__SSC_ShowImageAsync(byte[] imageStream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_ChangeSignalTowerLight", ReplyAction="http://tempuri.org/ISystemService/__SSC_ChangeSignalTowerLightResponse")]
        void @__SSC_ChangeSignalTowerLight(global::UserScript.Service.SSC_TriColorLightOptions option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_ChangeSignalTowerLight", ReplyAction="http://tempuri.org/ISystemService/__SSC_ChangeSignalTowerLightResponse")]
        System.Threading.Tasks.Task @__SSC_ChangeSignalTowerLightAsync(global::UserScript.Service.SSC_TriColorLightOptions option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_TurnOffSignalTowerBuzzer", ReplyAction="http://tempuri.org/ISystemService/__SSC_TurnOffSignalTowerBuzzerResponse")]
        void @__SSC_TurnOffSignalTowerBuzzer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_TurnOffSignalTowerBuzzer", ReplyAction="http://tempuri.org/ISystemService/__SSC_TurnOffSignalTowerBuzzerResponse")]
        System.Threading.Tasks.Task @__SSC_TurnOffSignalTowerBuzzerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_Connect", ReplyAction="http://tempuri.org/ISystemService/__SSC_ConnectResponse")]
        void @__SSC_Connect();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_Connect", ReplyAction="http://tempuri.org/ISystemService/__SSC_ConnectResponse")]
        System.Threading.Tasks.Task @__SSC_ConnectAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_Disconnect", ReplyAction="http://tempuri.org/ISystemService/__SSC_DisconnectResponse")]
        void @__SSC_Disconnect();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_Disconnect", ReplyAction="http://tempuri.org/ISystemService/__SSC_DisconnectResponse")]
        System.Threading.Tasks.Task @__SSC_DisconnectAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_WriteVariable", ReplyAction="http://tempuri.org/ISystemService/__SSC_WriteVariableResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.SSC_TriColorLightOptions))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.SSC_PresetPositionInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.SSC_PresetPositionInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.SSC_IOStatusEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.SSC_PMUnitEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.SSC_PMRangeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.ReadPresetPositionResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.AxisStatusResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.AxisStatusResponse[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.AlignmentAreaScanResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.AlignmentNdResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.Alignment1DResponse[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.Alignment1DResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.AlignmentAngleTuningResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.AlignmentCentralAlignResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        void @__SSC_WriteVariable(string name, object value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_WriteVariable", ReplyAction="http://tempuri.org/ISystemService/__SSC_WriteVariableResponse")]
        System.Threading.Tasks.Task @__SSC_WriteVariableAsync(string name, object value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_ReadVariable", ReplyAction="http://tempuri.org/ISystemService/__SSC_ReadVariableResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.SSC_TriColorLightOptions))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.SSC_PresetPositionInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.SSC_PresetPositionInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.SSC_IOStatusEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.SSC_PMUnitEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.SSC_PMRangeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.ReadPresetPositionResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.AxisStatusResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.AxisStatusResponse[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.AlignmentAreaScanResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.AlignmentNdResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.Alignment1DResponse[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.Alignment1DResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.AlignmentAngleTuningResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.AlignmentCentralAlignResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        object @__SSC_ReadVariable(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_ReadVariable", ReplyAction="http://tempuri.org/ISystemService/__SSC_ReadVariableResponse")]
        System.Threading.Tasks.Task<object> @__SSC_ReadVariableAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_SavePosition", ReplyAction="http://tempuri.org/ISystemService/__SSC_SavePositionResponse")]
        void @__SSC_SavePosition(string profileName, string lmu, global::UserScript.Service.SSC_PresetPositionInfo[] positionInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_SavePosition", ReplyAction="http://tempuri.org/ISystemService/__SSC_SavePositionResponse")]
        System.Threading.Tasks.Task @__SSC_SavePositionAsync(string profileName, string lmu, global::UserScript.Service.SSC_PresetPositionInfo[] positionInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_ReadPresetPosition", ReplyAction="http://tempuri.org/ISystemService/__SSC_ReadPresetPositionResponse")]
        global::UserScript.Service.ReadPresetPositionResponse @__SSC_ReadPresetPosition(string lmc, string profileName, string axis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_ReadPresetPosition", ReplyAction="http://tempuri.org/ISystemService/__SSC_ReadPresetPositionResponse")]
        System.Threading.Tasks.Task<global::UserScript.Service.ReadPresetPositionResponse> @__SSC_ReadPresetPositionAsync(string lmc, string profileName, string axis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_SequenceStop", ReplyAction="http://tempuri.org/ISystemService/__SSC_SequenceStopResponse")]
        void @__SSC_SequenceStop();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_SequenceStop", ReplyAction="http://tempuri.org/ISystemService/__SSC_SequenceStopResponse")]
        System.Threading.Tasks.Task @__SSC_SequenceStopAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_GetLMUList", ReplyAction="http://tempuri.org/ISystemService/__SSC_GetLMUListResponse")]
        string[] @__SSC_GetLMUList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_GetLMUList", ReplyAction="http://tempuri.org/ISystemService/__SSC_GetLMUListResponse")]
        System.Threading.Tasks.Task<string[]> @__SSC_GetLMUListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_GetAxisList", ReplyAction="http://tempuri.org/ISystemService/__SSC_GetAxisListResponse")]
        string[] @__SSC_GetAxisList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_GetAxisList", ReplyAction="http://tempuri.org/ISystemService/__SSC_GetAxisListResponse")]
        System.Threading.Tasks.Task<string[]> @__SSC_GetAxisListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_GetAxisListInLMU", ReplyAction="http://tempuri.org/ISystemService/__SSC_GetAxisListInLMUResponse")]
        string[] @__SSC_GetAxisListInLMU(string lmu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_GetAxisListInLMU", ReplyAction="http://tempuri.org/ISystemService/__SSC_GetAxisListInLMUResponse")]
        System.Threading.Tasks.Task<string[]> @__SSC_GetAxisListInLMUAsync(string lmu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_GetMEQList", ReplyAction="http://tempuri.org/ISystemService/__SSC_GetMEQListResponse")]
        string[] @__SSC_GetMEQList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_GetMEQList", ReplyAction="http://tempuri.org/ISystemService/__SSC_GetMEQListResponse")]
        System.Threading.Tasks.Task<string[]> @__SSC_GetMEQListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_Home", ReplyAction="http://tempuri.org/ISystemService/__SSC_HomeResponse")]
        void @__SSC_Home(string lmu, string axis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_Home", ReplyAction="http://tempuri.org/ISystemService/__SSC_HomeResponse")]
        System.Threading.Tasks.Task @__SSC_HomeAsync(string lmu, string axis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_MeasurableDevice_Read", ReplyAction="http://tempuri.org/ISystemService/__SSC_MeasurableDevice_ReadResponse")]
        double @__SSC_MeasurableDevice_Read(string caption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_MeasurableDevice_Read", ReplyAction="http://tempuri.org/ISystemService/__SSC_MeasurableDevice_ReadResponse")]
        System.Threading.Tasks.Task<double> @__SSC_MeasurableDevice_ReadAsync(string caption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_MoveAxis", ReplyAction="http://tempuri.org/ISystemService/__SSC_MoveAxisResponse")]
        void @__SSC_MoveAxis(string lmu, string axis, bool isAbsMode, double speed, double distance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_MoveAxis", ReplyAction="http://tempuri.org/ISystemService/__SSC_MoveAxisResponse")]
        System.Threading.Tasks.Task @__SSC_MoveAxisAsync(string lmu, string axis, bool isAbsMode, double speed, double distance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_MoveToPresetPosition", ReplyAction="http://tempuri.org/ISystemService/__SSC_MoveToPresetPositionResponse")]
        void @__SSC_MoveToPresetPosition(string lmu, string profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_MoveToPresetPosition", ReplyAction="http://tempuri.org/ISystemService/__SSC_MoveToPresetPositionResponse")]
        System.Threading.Tasks.Task @__SSC_MoveToPresetPositionAsync(string lmu, string profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_UpdatePresetPosition", ReplyAction="http://tempuri.org/ISystemService/__SSC_UpdatePresetPositionResponse")]
        void @__SSC_UpdatePresetPosition(string lmu, string profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_UpdatePresetPosition", ReplyAction="http://tempuri.org/ISystemService/__SSC_UpdatePresetPositionResponse")]
        System.Threading.Tasks.Task @__SSC_UpdatePresetPositionAsync(string lmu, string profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_GetAbsPosition", ReplyAction="http://tempuri.org/ISystemService/__SSC_GetAbsPositionResponse")]
        double @__SSC_GetAbsPosition(string lmu, string axis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_GetAbsPosition", ReplyAction="http://tempuri.org/ISystemService/__SSC_GetAbsPositionResponse")]
        System.Threading.Tasks.Task<double> @__SSC_GetAbsPositionAsync(string lmu, string axis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_GetRelPosition", ReplyAction="http://tempuri.org/ISystemService/__SSC_GetRelPositionResponse")]
        double @__SSC_GetRelPosition(string lmu, string axis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_GetRelPosition", ReplyAction="http://tempuri.org/ISystemService/__SSC_GetRelPositionResponse")]
        System.Threading.Tasks.Task<double> @__SSC_GetRelPositionAsync(string lmu, string axis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_ServoOn", ReplyAction="http://tempuri.org/ISystemService/__SSC_ServoOnResponse")]
        void @__SSC_ServoOn(string lmu, string axis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_ServoOn", ReplyAction="http://tempuri.org/ISystemService/__SSC_ServoOnResponse")]
        System.Threading.Tasks.Task @__SSC_ServoOnAsync(string lmu, string axis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_ServoOff", ReplyAction="http://tempuri.org/ISystemService/__SSC_ServoOffResponse")]
        void @__SSC_ServoOff(string lmu, string axis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_ServoOff", ReplyAction="http://tempuri.org/ISystemService/__SSC_ServoOffResponse")]
        System.Threading.Tasks.Task @__SSC_ServoOffAsync(string lmu, string axis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_ResetAxisFault", ReplyAction="http://tempuri.org/ISystemService/__SSC_ResetAxisFaultResponse")]
        void @__SSC_ResetAxisFault(string lmu, string axis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_ResetAxisFault", ReplyAction="http://tempuri.org/ISystemService/__SSC_ResetAxisFaultResponse")]
        System.Threading.Tasks.Task @__SSC_ResetAxisFaultAsync(string lmu, string axis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_MotionStop", ReplyAction="http://tempuri.org/ISystemService/__SSC_MotionStopResponse")]
        void @__SSC_MotionStop();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_MotionStop", ReplyAction="http://tempuri.org/ISystemService/__SSC_MotionStopResponse")]
        System.Threading.Tasks.Task @__SSC_MotionStopAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_EmergencyStop", ReplyAction="http://tempuri.org/ISystemService/__SSC_EmergencyStopResponse")]
        void @__SSC_EmergencyStop();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_EmergencyStop", ReplyAction="http://tempuri.org/ISystemService/__SSC_EmergencyStopResponse")]
        System.Threading.Tasks.Task @__SSC_EmergencyStopAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_GetAxisStatus", ReplyAction="http://tempuri.org/ISystemService/__SSC_GetAxisStatusResponse")]
        global::UserScript.Service.AxisStatusResponse @__SSC_GetAxisStatus(string lmu, string axis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_GetAxisStatus", ReplyAction="http://tempuri.org/ISystemService/__SSC_GetAxisStatusResponse")]
        System.Threading.Tasks.Task<global::UserScript.Service.AxisStatusResponse> @__SSC_GetAxisStatusAsync(string lmu, string axis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_GetLmuStatus", ReplyAction="http://tempuri.org/ISystemService/__SSC_GetLmuStatusResponse")]
        global::UserScript.Service.AxisStatusResponse[] @__SSC_GetLmuStatus(string lmu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_GetLmuStatus", ReplyAction="http://tempuri.org/ISystemService/__SSC_GetLmuStatusResponse")]
        System.Threading.Tasks.Task<global::UserScript.Service.AxisStatusResponse[]> @__SSC_GetLmuStatusAsync(string lmu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_AutoTouchByMEQ", ReplyAction="http://tempuri.org/ISystemService/__SSC_AutoTouchByMEQResponse")]
        void @__SSC_AutoTouchByMEQ(string lmu, string axis, double speed, double step, double maxDistance, string meqName, double threshold);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_AutoTouchByMEQ", ReplyAction="http://tempuri.org/ISystemService/__SSC_AutoTouchByMEQResponse")]
        System.Threading.Tasks.Task @__SSC_AutoTouchByMEQAsync(string lmu, string axis, double speed, double step, double maxDistance, string meqName, double threshold);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_AutoTouchByAin", ReplyAction="http://tempuri.org/ISystemService/__SSC_AutoTouchByAinResponse")]
        void @__SSC_AutoTouchByAin(string lmu, string axis, double speed, double step, double maxDistance, string aiName, double threshold);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_AutoTouchByAin", ReplyAction="http://tempuri.org/ISystemService/__SSC_AutoTouchByAinResponse")]
        System.Threading.Tasks.Task @__SSC_AutoTouchByAinAsync(string lmu, string axis, double speed, double step, double maxDistance, string aiName, double threshold);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_AutoTouchByDin", ReplyAction="http://tempuri.org/ISystemService/__SSC_AutoTouchByDinResponse")]
        void @__SSC_AutoTouchByDin(string lmu, string axis, double speed, double step, double maxDistance, string diName, global::UserScript.Service.SSC_IOStatusEnum status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_AutoTouchByDin", ReplyAction="http://tempuri.org/ISystemService/__SSC_AutoTouchByDinResponse")]
        System.Threading.Tasks.Task @__SSC_AutoTouchByDinAsync(string lmu, string axis, double speed, double step, double maxDistance, string diName, global::UserScript.Service.SSC_IOStatusEnum status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_CommonPluginExecute", ReplyAction="http://tempuri.org/ISystemService/__SSC_CommonPluginExecuteResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.SSC_TriColorLightOptions))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.SSC_PresetPositionInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.SSC_PresetPositionInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.SSC_IOStatusEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.SSC_PMUnitEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.SSC_PMRangeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.ReadPresetPositionResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.AxisStatusResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.AxisStatusResponse[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.AlignmentAreaScanResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.AlignmentNdResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.Alignment1DResponse[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.Alignment1DResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.AlignmentAngleTuningResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.AlignmentCentralAlignResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        object @__SSC_CommonPluginExecute(string pluginName, string param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_CommonPluginExecute", ReplyAction="http://tempuri.org/ISystemService/__SSC_CommonPluginExecuteResponse")]
        System.Threading.Tasks.Task<object> @__SSC_CommonPluginExecuteAsync(string pluginName, string param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_EquipmentPluginControl", ReplyAction="http://tempuri.org/ISystemService/__SSC_EquipmentPluginControlResponse")]
        void @__SSC_EquipmentPluginControl(string pluginName, string param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_EquipmentPluginControl", ReplyAction="http://tempuri.org/ISystemService/__SSC_EquipmentPluginControlResponse")]
        System.Threading.Tasks.Task @__SSC_EquipmentPluginControlAsync(string pluginName, string param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_EquipmentPluginExecute", ReplyAction="http://tempuri.org/ISystemService/__SSC_EquipmentPluginExecuteResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.SSC_TriColorLightOptions))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.SSC_PresetPositionInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.SSC_PresetPositionInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.SSC_IOStatusEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.SSC_PMUnitEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.SSC_PMRangeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.ReadPresetPositionResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.AxisStatusResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.AxisStatusResponse[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.AlignmentAreaScanResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.AlignmentNdResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.Alignment1DResponse[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.Alignment1DResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.AlignmentAngleTuningResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(global::UserScript.Service.AlignmentCentralAlignResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        object @__SSC_EquipmentPluginExecute(string pluginName, string param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_EquipmentPluginExecute", ReplyAction="http://tempuri.org/ISystemService/__SSC_EquipmentPluginExecuteResponse")]
        System.Threading.Tasks.Task<object> @__SSC_EquipmentPluginExecuteAsync(string pluginName, string param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_EquipmentPluginWait", ReplyAction="http://tempuri.org/ISystemService/__SSC_EquipmentPluginWaitResponse")]
        void @__SSC_EquipmentPluginWait(string pluginName, int timeoutMillisecond);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_EquipmentPluginWait", ReplyAction="http://tempuri.org/ISystemService/__SSC_EquipmentPluginWaitResponse")]
        System.Threading.Tasks.Task @__SSC_EquipmentPluginWaitAsync(string pluginName, int timeoutMillisecond);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_ReadDI", ReplyAction="http://tempuri.org/ISystemService/__SSC_ReadDIResponse")]
        bool @__SSC_ReadDI(string diName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_ReadDI", ReplyAction="http://tempuri.org/ISystemService/__SSC_ReadDIResponse")]
        System.Threading.Tasks.Task<bool> @__SSC_ReadDIAsync(string diName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_ReadDO", ReplyAction="http://tempuri.org/ISystemService/__SSC_ReadDOResponse")]
        bool @__SSC_ReadDO(string doName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_ReadDO", ReplyAction="http://tempuri.org/ISystemService/__SSC_ReadDOResponse")]
        System.Threading.Tasks.Task<bool> @__SSC_ReadDOAsync(string doName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_WriteDO", ReplyAction="http://tempuri.org/ISystemService/__SSC_WriteDOResponse")]
        void @__SSC_WriteDO(string io, bool value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_WriteDO", ReplyAction="http://tempuri.org/ISystemService/__SSC_WriteDOResponse")]
        System.Threading.Tasks.Task @__SSC_WriteDOAsync(string io, bool value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_WaitDI", ReplyAction="http://tempuri.org/ISystemService/__SSC_WaitDIResponse")]
        void @__SSC_WaitDI(string diName, bool value, int timeoutMillisecond);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_WaitDI", ReplyAction="http://tempuri.org/ISystemService/__SSC_WaitDIResponse")]
        System.Threading.Tasks.Task @__SSC_WaitDIAsync(string diName, bool value, int timeoutMillisecond);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_DoBlindSearch", ReplyAction="http://tempuri.org/ISystemService/__SSC_DoBlindSearchResponse")]
        global::UserScript.Service.AlignmentAreaScanResponse @__SSC_DoBlindSearch(string profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_DoBlindSearch", ReplyAction="http://tempuri.org/ISystemService/__SSC_DoBlindSearchResponse")]
        System.Threading.Tasks.Task<global::UserScript.Service.AlignmentAreaScanResponse> @__SSC_DoBlindSearchAsync(string profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_DoBlindSearchWithParam", ReplyAction="http://tempuri.org/ISystemService/__SSC_DoBlindSearchWithParamResponse")]
        global::UserScript.Service.AlignmentAreaScanResponse @__SSC_DoBlindSearchWithParam(string lmu, string horizontalAxis, string verticalAxis, double interval, double range, double speed, string analogPort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_DoBlindSearchWithParam", ReplyAction="http://tempuri.org/ISystemService/__SSC_DoBlindSearchWithParamResponse")]
        System.Threading.Tasks.Task<global::UserScript.Service.AlignmentAreaScanResponse> @__SSC_DoBlindSearchWithParamAsync(string lmu, string horizontalAxis, string verticalAxis, double interval, double range, double speed, string analogPort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_DoRectAreaScan", ReplyAction="http://tempuri.org/ISystemService/__SSC_DoRectAreaScanResponse")]
        global::UserScript.Service.AlignmentAreaScanResponse @__SSC_DoRectAreaScan(string profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_DoRectAreaScan", ReplyAction="http://tempuri.org/ISystemService/__SSC_DoRectAreaScanResponse")]
        System.Threading.Tasks.Task<global::UserScript.Service.AlignmentAreaScanResponse> @__SSC_DoRectAreaScanAsync(string profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_DoSlowRectAreaScan", ReplyAction="http://tempuri.org/ISystemService/__SSC_DoSlowRectAreaScanResponse")]
        global::UserScript.Service.AlignmentAreaScanResponse @__SSC_DoSlowRectAreaScan(string profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_DoSlowRectAreaScan", ReplyAction="http://tempuri.org/ISystemService/__SSC_DoSlowRectAreaScanResponse")]
        System.Threading.Tasks.Task<global::UserScript.Service.AlignmentAreaScanResponse> @__SSC_DoSlowRectAreaScanAsync(string profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_DoFast1D", ReplyAction="http://tempuri.org/ISystemService/__SSC_DoFast1DResponse")]
        global::UserScript.Service.AlignmentNdResponse @__SSC_DoFast1D(string lmu, string axis, double interval, double range, double speed, string analogPort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_DoFast1D", ReplyAction="http://tempuri.org/ISystemService/__SSC_DoFast1DResponse")]
        System.Threading.Tasks.Task<global::UserScript.Service.AlignmentNdResponse> @__SSC_DoFast1DAsync(string lmu, string axis, double interval, double range, double speed, string analogPort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_DoFastND", ReplyAction="http://tempuri.org/ISystemService/__SSC_DoFastNDResponse")]
        global::UserScript.Service.AlignmentNdResponse @__SSC_DoFastND(string profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_DoFastND", ReplyAction="http://tempuri.org/ISystemService/__SSC_DoFastNDResponse")]
        System.Threading.Tasks.Task<global::UserScript.Service.AlignmentNdResponse> @__SSC_DoFastNDAsync(string profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_DoFastAngleTuning", ReplyAction="http://tempuri.org/ISystemService/__SSC_DoFastAngleTuningResponse")]
        global::UserScript.Service.AlignmentAngleTuningResponse @__SSC_DoFastAngleTuning(string profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_DoFastAngleTuning", ReplyAction="http://tempuri.org/ISystemService/__SSC_DoFastAngleTuningResponse")]
        System.Threading.Tasks.Task<global::UserScript.Service.AlignmentAngleTuningResponse> @__SSC_DoFastAngleTuningAsync(string profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_DoFastCentralAlign", ReplyAction="http://tempuri.org/ISystemService/__SSC_DoFastCentralAlignResponse")]
        global::UserScript.Service.AlignmentCentralAlignResponse @__SSC_DoFastCentralAlign(string profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_DoFastCentralAlign", ReplyAction="http://tempuri.org/ISystemService/__SSC_DoFastCentralAlignResponse")]
        System.Threading.Tasks.Task<global::UserScript.Service.AlignmentCentralAlignResponse> @__SSC_DoFastCentralAlignAsync(string profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_DoFastAngleTuningWithParam", ReplyAction="http://tempuri.org/ISystemService/__SSC_DoFastAngleTuningWithParamResponse")]
        global::UserScript.Service.AlignmentAngleTuningResponse @__SSC_DoFastAngleTuningWithParam(string lmu, string linearAxis, double linearInterval, double linearRange, double speed, double pitch, string analogPort, string analogPort2, string rotatingAxis, double tuningFactor, int rotatingSpeed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_DoFastAngleTuningWithParam", ReplyAction="http://tempuri.org/ISystemService/__SSC_DoFastAngleTuningWithParamResponse")]
        System.Threading.Tasks.Task<global::UserScript.Service.AlignmentAngleTuningResponse> @__SSC_DoFastAngleTuningWithParamAsync(string lmu, string linearAxis, double linearInterval, double linearRange, double speed, double pitch, string analogPort, string analogPort2, string rotatingAxis, double tuningFactor, int rotatingSpeed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_DoProfile1D", ReplyAction="http://tempuri.org/ISystemService/__SSC_DoProfile1DResponse")]
        global::UserScript.Service.AlignmentNdResponse @__SSC_DoProfile1D(string lmu, string axis, double interval, double range, double speed, string equipment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_DoProfile1D", ReplyAction="http://tempuri.org/ISystemService/__SSC_DoProfile1DResponse")]
        System.Threading.Tasks.Task<global::UserScript.Service.AlignmentNdResponse> @__SSC_DoProfile1DAsync(string lmu, string axis, double interval, double range, double speed, string equipment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_DoProfileND", ReplyAction="http://tempuri.org/ISystemService/__SSC_DoProfileNDResponse")]
        global::UserScript.Service.AlignmentNdResponse @__SSC_DoProfileND(string profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_DoProfileND", ReplyAction="http://tempuri.org/ISystemService/__SSC_DoProfileNDResponse")]
        System.Threading.Tasks.Task<global::UserScript.Service.AlignmentNdResponse> @__SSC_DoProfileNDAsync(string profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_DoAngleTuning", ReplyAction="http://tempuri.org/ISystemService/__SSC_DoAngleTuningResponse")]
        global::UserScript.Service.AlignmentAngleTuningResponse @__SSC_DoAngleTuning(string profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_DoAngleTuning", ReplyAction="http://tempuri.org/ISystemService/__SSC_DoAngleTuningResponse")]
        System.Threading.Tasks.Task<global::UserScript.Service.AlignmentAngleTuningResponse> @__SSC_DoAngleTuningAsync(string profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_DoCentralAlign", ReplyAction="http://tempuri.org/ISystemService/__SSC_DoCentralAlignResponse")]
        global::UserScript.Service.AlignmentCentralAlignResponse @__SSC_DoCentralAlign(string profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_DoCentralAlign", ReplyAction="http://tempuri.org/ISystemService/__SSC_DoCentralAlignResponse")]
        System.Threading.Tasks.Task<global::UserScript.Service.AlignmentCentralAlignResponse> @__SSC_DoCentralAlignAsync(string profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_DoHillClimb", ReplyAction="http://tempuri.org/ISystemService/__SSC_DoHillClimbResponse")]
        void @__SSC_DoHillClimb(string profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_DoHillClimb", ReplyAction="http://tempuri.org/ISystemService/__SSC_DoHillClimbResponse")]
        System.Threading.Tasks.Task @__SSC_DoHillClimbAsync(string profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_Powermeter_SetUnit", ReplyAction="http://tempuri.org/ISystemService/__SSC_Powermeter_SetUnitResponse")]
        void @__SSC_Powermeter_SetUnit(string caption, global::UserScript.Service.SSC_PMUnitEnum unit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_Powermeter_SetUnit", ReplyAction="http://tempuri.org/ISystemService/__SSC_Powermeter_SetUnitResponse")]
        System.Threading.Tasks.Task @__SSC_Powermeter_SetUnitAsync(string caption, global::UserScript.Service.SSC_PMUnitEnum unit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_Powermeter_GetUnit", ReplyAction="http://tempuri.org/ISystemService/__SSC_Powermeter_GetUnitResponse")]
        global::UserScript.Service.SSC_PMUnitEnum @__SSC_Powermeter_GetUnit(string caption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_Powermeter_GetUnit", ReplyAction="http://tempuri.org/ISystemService/__SSC_Powermeter_GetUnitResponse")]
        System.Threading.Tasks.Task<global::UserScript.Service.SSC_PMUnitEnum> @__SSC_Powermeter_GetUnitAsync(string caption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_Powermeter_SetRange", ReplyAction="http://tempuri.org/ISystemService/__SSC_Powermeter_SetRangeResponse")]
        void @__SSC_Powermeter_SetRange(string caption, global::UserScript.Service.SSC_PMRangeEnum range);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_Powermeter_SetRange", ReplyAction="http://tempuri.org/ISystemService/__SSC_Powermeter_SetRangeResponse")]
        System.Threading.Tasks.Task @__SSC_Powermeter_SetRangeAsync(string caption, global::UserScript.Service.SSC_PMRangeEnum range);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_Powermeter_GetRange", ReplyAction="http://tempuri.org/ISystemService/__SSC_Powermeter_GetRangeResponse")]
        global::UserScript.Service.SSC_PMRangeEnum @__SSC_Powermeter_GetRange(string caption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/__SSC_Powermeter_GetRange", ReplyAction="http://tempuri.org/ISystemService/__SSC_Powermeter_GetRangeResponse")]
        System.Threading.Tasks.Task<global::UserScript.Service.SSC_PMRangeEnum> @__SSC_Powermeter_GetRangeAsync(string caption);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISystemServiceChannel : global::UserScript.Service.ISystemService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SystemServiceClient : System.ServiceModel.ClientBase<global::UserScript.Service.ISystemService>, global::UserScript.Service.ISystemService {
        
        public SystemServiceClient() {
        }
        
        public SystemServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SystemServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SystemServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SystemServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void @__SSC_Powermeter_ZeroOutput(string caption) {
            base.Channel.@__SSC_Powermeter_ZeroOutput(caption);
        }
        
        public System.Threading.Tasks.Task @__SSC_Powermeter_ZeroOutputAsync(string caption) {
            return base.Channel.@__SSC_Powermeter_ZeroOutputAsync(caption);
        }
        
        public double @__SSC_Powermeter_Read(string caption) {
            return base.Channel.@__SSC_Powermeter_Read(caption);
        }
        
        public System.Threading.Tasks.Task<double> @__SSC_Powermeter_ReadAsync(string caption) {
            return base.Channel.@__SSC_Powermeter_ReadAsync(caption);
        }
        
        public void @__SSC_LogInfo(string message) {
            base.Channel.@__SSC_LogInfo(message);
        }
        
        public System.Threading.Tasks.Task @__SSC_LogInfoAsync(string message) {
            return base.Channel.@__SSC_LogInfoAsync(message);
        }
        
        public void @__SSC_LogError(string message) {
            base.Channel.@__SSC_LogError(message);
        }
        
        public System.Threading.Tasks.Task @__SSC_LogErrorAsync(string message) {
            return base.Channel.@__SSC_LogErrorAsync(message);
        }
        
        public void @__SSC_LogWarn(string message) {
            base.Channel.@__SSC_LogWarn(message);
        }
        
        public System.Threading.Tasks.Task @__SSC_LogWarnAsync(string message) {
            return base.Channel.@__SSC_LogWarnAsync(message);
        }
        
        public void @__SSC_ShowMessageBox(string message) {
            base.Channel.@__SSC_ShowMessageBox(message);
        }
        
        public System.Threading.Tasks.Task @__SSC_ShowMessageBoxAsync(string message) {
            return base.Channel.@__SSC_ShowMessageBoxAsync(message);
        }
        
        public void @__SSC_ShowWarningMessageBox(string message) {
            base.Channel.@__SSC_ShowWarningMessageBox(message);
        }
        
        public System.Threading.Tasks.Task @__SSC_ShowWarningMessageBoxAsync(string message) {
            return base.Channel.@__SSC_ShowWarningMessageBoxAsync(message);
        }
        
        public void @__SSC_ShowErrorMessageBox(string message) {
            base.Channel.@__SSC_ShowErrorMessageBox(message);
        }
        
        public System.Threading.Tasks.Task @__SSC_ShowErrorMessageBoxAsync(string message) {
            return base.Channel.@__SSC_ShowErrorMessageBoxAsync(message);
        }
        
        public bool @__SSC_ShowYesNoMessageBox(string message) {
            return base.Channel.@__SSC_ShowYesNoMessageBox(message);
        }
        
        public System.Threading.Tasks.Task<bool> @__SSC_ShowYesNoMessageBoxAsync(string message) {
            return base.Channel.@__SSC_ShowYesNoMessageBoxAsync(message);
        }
        
        public void @__SSC_ShowImage(byte[] imageStream) {
            base.Channel.@__SSC_ShowImage(imageStream);
        }
        
        public System.Threading.Tasks.Task @__SSC_ShowImageAsync(byte[] imageStream) {
            return base.Channel.@__SSC_ShowImageAsync(imageStream);
        }
        
        public void @__SSC_ChangeSignalTowerLight(global::UserScript.Service.SSC_TriColorLightOptions option) {
            base.Channel.@__SSC_ChangeSignalTowerLight(option);
        }
        
        public System.Threading.Tasks.Task @__SSC_ChangeSignalTowerLightAsync(global::UserScript.Service.SSC_TriColorLightOptions option) {
            return base.Channel.@__SSC_ChangeSignalTowerLightAsync(option);
        }
        
        public void @__SSC_TurnOffSignalTowerBuzzer() {
            base.Channel.@__SSC_TurnOffSignalTowerBuzzer();
        }
        
        public System.Threading.Tasks.Task @__SSC_TurnOffSignalTowerBuzzerAsync() {
            return base.Channel.@__SSC_TurnOffSignalTowerBuzzerAsync();
        }
        
        public void @__SSC_Connect() {
            base.Channel.@__SSC_Connect();
        }
        
        public System.Threading.Tasks.Task @__SSC_ConnectAsync() {
            return base.Channel.@__SSC_ConnectAsync();
        }
        
        public void @__SSC_Disconnect() {
            base.Channel.@__SSC_Disconnect();
        }
        
        public System.Threading.Tasks.Task @__SSC_DisconnectAsync() {
            return base.Channel.@__SSC_DisconnectAsync();
        }
        
        public void @__SSC_WriteVariable(string name, object value) {
            base.Channel.@__SSC_WriteVariable(name, value);
        }
        
        public System.Threading.Tasks.Task @__SSC_WriteVariableAsync(string name, object value) {
            return base.Channel.@__SSC_WriteVariableAsync(name, value);
        }
        
        public object @__SSC_ReadVariable(string name) {
            return base.Channel.@__SSC_ReadVariable(name);
        }
        
        public System.Threading.Tasks.Task<object> @__SSC_ReadVariableAsync(string name) {
            return base.Channel.@__SSC_ReadVariableAsync(name);
        }
        
        public void @__SSC_SavePosition(string profileName, string lmu, global::UserScript.Service.SSC_PresetPositionInfo[] positionInfo) {
            base.Channel.@__SSC_SavePosition(profileName, lmu, positionInfo);
        }
        
        public System.Threading.Tasks.Task @__SSC_SavePositionAsync(string profileName, string lmu, global::UserScript.Service.SSC_PresetPositionInfo[] positionInfo) {
            return base.Channel.@__SSC_SavePositionAsync(profileName, lmu, positionInfo);
        }
        
        public global::UserScript.Service.ReadPresetPositionResponse @__SSC_ReadPresetPosition(string lmc, string profileName, string axis) {
            return base.Channel.@__SSC_ReadPresetPosition(lmc, profileName, axis);
        }
        
        public System.Threading.Tasks.Task<global::UserScript.Service.ReadPresetPositionResponse> @__SSC_ReadPresetPositionAsync(string lmc, string profileName, string axis) {
            return base.Channel.@__SSC_ReadPresetPositionAsync(lmc, profileName, axis);
        }
        
        public void @__SSC_SequenceStop() {
            base.Channel.@__SSC_SequenceStop();
        }
        
        public System.Threading.Tasks.Task @__SSC_SequenceStopAsync() {
            return base.Channel.@__SSC_SequenceStopAsync();
        }
        
        public string[] @__SSC_GetLMUList() {
            return base.Channel.@__SSC_GetLMUList();
        }
        
        public System.Threading.Tasks.Task<string[]> @__SSC_GetLMUListAsync() {
            return base.Channel.@__SSC_GetLMUListAsync();
        }
        
        public string[] @__SSC_GetAxisList() {
            return base.Channel.@__SSC_GetAxisList();
        }
        
        public System.Threading.Tasks.Task<string[]> @__SSC_GetAxisListAsync() {
            return base.Channel.@__SSC_GetAxisListAsync();
        }
        
        public string[] @__SSC_GetAxisListInLMU(string lmu) {
            return base.Channel.@__SSC_GetAxisListInLMU(lmu);
        }
        
        public System.Threading.Tasks.Task<string[]> @__SSC_GetAxisListInLMUAsync(string lmu) {
            return base.Channel.@__SSC_GetAxisListInLMUAsync(lmu);
        }
        
        public string[] @__SSC_GetMEQList() {
            return base.Channel.@__SSC_GetMEQList();
        }
        
        public System.Threading.Tasks.Task<string[]> @__SSC_GetMEQListAsync() {
            return base.Channel.@__SSC_GetMEQListAsync();
        }
        
        public void @__SSC_Home(string lmu, string axis) {
            base.Channel.@__SSC_Home(lmu, axis);
        }
        
        public System.Threading.Tasks.Task @__SSC_HomeAsync(string lmu, string axis) {
            return base.Channel.@__SSC_HomeAsync(lmu, axis);
        }
        
        public double @__SSC_MeasurableDevice_Read(string caption) {
            return base.Channel.@__SSC_MeasurableDevice_Read(caption);
        }
        
        public System.Threading.Tasks.Task<double> @__SSC_MeasurableDevice_ReadAsync(string caption) {
            return base.Channel.@__SSC_MeasurableDevice_ReadAsync(caption);
        }
        
        public void @__SSC_MoveAxis(string lmu, string axis, bool isAbsMode, double speed, double distance) {
            base.Channel.@__SSC_MoveAxis(lmu, axis, isAbsMode, speed, distance);
        }
        
        public System.Threading.Tasks.Task @__SSC_MoveAxisAsync(string lmu, string axis, bool isAbsMode, double speed, double distance) {
            return base.Channel.@__SSC_MoveAxisAsync(lmu, axis, isAbsMode, speed, distance);
        }
        
        public void @__SSC_MoveToPresetPosition(string lmu, string profile) {
            base.Channel.@__SSC_MoveToPresetPosition(lmu, profile);
        }
        
        public System.Threading.Tasks.Task @__SSC_MoveToPresetPositionAsync(string lmu, string profile) {
            return base.Channel.@__SSC_MoveToPresetPositionAsync(lmu, profile);
        }
        
        public void @__SSC_UpdatePresetPosition(string lmu, string profile) {
            base.Channel.@__SSC_UpdatePresetPosition(lmu, profile);
        }
        
        public System.Threading.Tasks.Task @__SSC_UpdatePresetPositionAsync(string lmu, string profile) {
            return base.Channel.@__SSC_UpdatePresetPositionAsync(lmu, profile);
        }
        
        public double @__SSC_GetAbsPosition(string lmu, string axis) {
            return base.Channel.@__SSC_GetAbsPosition(lmu, axis);
        }
        
        public System.Threading.Tasks.Task<double> @__SSC_GetAbsPositionAsync(string lmu, string axis) {
            return base.Channel.@__SSC_GetAbsPositionAsync(lmu, axis);
        }
        
        public double @__SSC_GetRelPosition(string lmu, string axis) {
            return base.Channel.@__SSC_GetRelPosition(lmu, axis);
        }
        
        public System.Threading.Tasks.Task<double> @__SSC_GetRelPositionAsync(string lmu, string axis) {
            return base.Channel.@__SSC_GetRelPositionAsync(lmu, axis);
        }
        
        public void @__SSC_ServoOn(string lmu, string axis) {
            base.Channel.@__SSC_ServoOn(lmu, axis);
        }
        
        public System.Threading.Tasks.Task @__SSC_ServoOnAsync(string lmu, string axis) {
            return base.Channel.@__SSC_ServoOnAsync(lmu, axis);
        }
        
        public void @__SSC_ServoOff(string lmu, string axis) {
            base.Channel.@__SSC_ServoOff(lmu, axis);
        }
        
        public System.Threading.Tasks.Task @__SSC_ServoOffAsync(string lmu, string axis) {
            return base.Channel.@__SSC_ServoOffAsync(lmu, axis);
        }
        
        public void @__SSC_ResetAxisFault(string lmu, string axis) {
            base.Channel.@__SSC_ResetAxisFault(lmu, axis);
        }
        
        public System.Threading.Tasks.Task @__SSC_ResetAxisFaultAsync(string lmu, string axis) {
            return base.Channel.@__SSC_ResetAxisFaultAsync(lmu, axis);
        }
        
        public void @__SSC_MotionStop() {
            base.Channel.@__SSC_MotionStop();
        }
        
        public System.Threading.Tasks.Task @__SSC_MotionStopAsync() {
            return base.Channel.@__SSC_MotionStopAsync();
        }
        
        public void @__SSC_EmergencyStop() {
            base.Channel.@__SSC_EmergencyStop();
        }
        
        public System.Threading.Tasks.Task @__SSC_EmergencyStopAsync() {
            return base.Channel.@__SSC_EmergencyStopAsync();
        }
        
        public global::UserScript.Service.AxisStatusResponse @__SSC_GetAxisStatus(string lmu, string axis) {
            return base.Channel.@__SSC_GetAxisStatus(lmu, axis);
        }
        
        public System.Threading.Tasks.Task<global::UserScript.Service.AxisStatusResponse> @__SSC_GetAxisStatusAsync(string lmu, string axis) {
            return base.Channel.@__SSC_GetAxisStatusAsync(lmu, axis);
        }
        
        public global::UserScript.Service.AxisStatusResponse[] @__SSC_GetLmuStatus(string lmu) {
            return base.Channel.@__SSC_GetLmuStatus(lmu);
        }
        
        public System.Threading.Tasks.Task<global::UserScript.Service.AxisStatusResponse[]> @__SSC_GetLmuStatusAsync(string lmu) {
            return base.Channel.@__SSC_GetLmuStatusAsync(lmu);
        }
        
        public void @__SSC_AutoTouchByMEQ(string lmu, string axis, double speed, double step, double maxDistance, string meqName, double threshold) {
            base.Channel.@__SSC_AutoTouchByMEQ(lmu, axis, speed, step, maxDistance, meqName, threshold);
        }
        
        public System.Threading.Tasks.Task @__SSC_AutoTouchByMEQAsync(string lmu, string axis, double speed, double step, double maxDistance, string meqName, double threshold) {
            return base.Channel.@__SSC_AutoTouchByMEQAsync(lmu, axis, speed, step, maxDistance, meqName, threshold);
        }
        
        public void @__SSC_AutoTouchByAin(string lmu, string axis, double speed, double step, double maxDistance, string aiName, double threshold) {
            base.Channel.@__SSC_AutoTouchByAin(lmu, axis, speed, step, maxDistance, aiName, threshold);
        }
        
        public System.Threading.Tasks.Task @__SSC_AutoTouchByAinAsync(string lmu, string axis, double speed, double step, double maxDistance, string aiName, double threshold) {
            return base.Channel.@__SSC_AutoTouchByAinAsync(lmu, axis, speed, step, maxDistance, aiName, threshold);
        }
        
        public void @__SSC_AutoTouchByDin(string lmu, string axis, double speed, double step, double maxDistance, string diName, global::UserScript.Service.SSC_IOStatusEnum status) {
            base.Channel.@__SSC_AutoTouchByDin(lmu, axis, speed, step, maxDistance, diName, status);
        }
        
        public System.Threading.Tasks.Task @__SSC_AutoTouchByDinAsync(string lmu, string axis, double speed, double step, double maxDistance, string diName, global::UserScript.Service.SSC_IOStatusEnum status) {
            return base.Channel.@__SSC_AutoTouchByDinAsync(lmu, axis, speed, step, maxDistance, diName, status);
        }
        
        public object @__SSC_CommonPluginExecute(string pluginName, string param) {
            return base.Channel.@__SSC_CommonPluginExecute(pluginName, param);
        }
        
        public System.Threading.Tasks.Task<object> @__SSC_CommonPluginExecuteAsync(string pluginName, string param) {
            return base.Channel.@__SSC_CommonPluginExecuteAsync(pluginName, param);
        }
        
        public void @__SSC_EquipmentPluginControl(string pluginName, string param) {
            base.Channel.@__SSC_EquipmentPluginControl(pluginName, param);
        }
        
        public System.Threading.Tasks.Task @__SSC_EquipmentPluginControlAsync(string pluginName, string param) {
            return base.Channel.@__SSC_EquipmentPluginControlAsync(pluginName, param);
        }
        
        public object @__SSC_EquipmentPluginExecute(string pluginName, string param) {
            return base.Channel.@__SSC_EquipmentPluginExecute(pluginName, param);
        }
        
        public System.Threading.Tasks.Task<object> @__SSC_EquipmentPluginExecuteAsync(string pluginName, string param) {
            return base.Channel.@__SSC_EquipmentPluginExecuteAsync(pluginName, param);
        }
        
        public void @__SSC_EquipmentPluginWait(string pluginName, int timeoutMillisecond) {
            base.Channel.@__SSC_EquipmentPluginWait(pluginName, timeoutMillisecond);
        }
        
        public System.Threading.Tasks.Task @__SSC_EquipmentPluginWaitAsync(string pluginName, int timeoutMillisecond) {
            return base.Channel.@__SSC_EquipmentPluginWaitAsync(pluginName, timeoutMillisecond);
        }
        
        public bool @__SSC_ReadDI(string diName) {
            return base.Channel.@__SSC_ReadDI(diName);
        }
        
        public System.Threading.Tasks.Task<bool> @__SSC_ReadDIAsync(string diName) {
            return base.Channel.@__SSC_ReadDIAsync(diName);
        }
        
        public bool @__SSC_ReadDO(string doName) {
            return base.Channel.@__SSC_ReadDO(doName);
        }
        
        public System.Threading.Tasks.Task<bool> @__SSC_ReadDOAsync(string doName) {
            return base.Channel.@__SSC_ReadDOAsync(doName);
        }
        
        public void @__SSC_WriteDO(string io, bool value) {
            base.Channel.@__SSC_WriteDO(io, value);
        }
        
        public System.Threading.Tasks.Task @__SSC_WriteDOAsync(string io, bool value) {
            return base.Channel.@__SSC_WriteDOAsync(io, value);
        }
        
        public void @__SSC_WaitDI(string diName, bool value, int timeoutMillisecond) {
            base.Channel.@__SSC_WaitDI(diName, value, timeoutMillisecond);
        }
        
        public System.Threading.Tasks.Task @__SSC_WaitDIAsync(string diName, bool value, int timeoutMillisecond) {
            return base.Channel.@__SSC_WaitDIAsync(diName, value, timeoutMillisecond);
        }
        
        public global::UserScript.Service.AlignmentAreaScanResponse @__SSC_DoBlindSearch(string profile) {
            return base.Channel.@__SSC_DoBlindSearch(profile);
        }
        
        public System.Threading.Tasks.Task<global::UserScript.Service.AlignmentAreaScanResponse> @__SSC_DoBlindSearchAsync(string profile) {
            return base.Channel.@__SSC_DoBlindSearchAsync(profile);
        }
        
        public global::UserScript.Service.AlignmentAreaScanResponse @__SSC_DoBlindSearchWithParam(string lmu, string horizontalAxis, string verticalAxis, double interval, double range, double speed, string analogPort) {
            return base.Channel.@__SSC_DoBlindSearchWithParam(lmu, horizontalAxis, verticalAxis, interval, range, speed, analogPort);
        }
        
        public System.Threading.Tasks.Task<global::UserScript.Service.AlignmentAreaScanResponse> @__SSC_DoBlindSearchWithParamAsync(string lmu, string horizontalAxis, string verticalAxis, double interval, double range, double speed, string analogPort) {
            return base.Channel.@__SSC_DoBlindSearchWithParamAsync(lmu, horizontalAxis, verticalAxis, interval, range, speed, analogPort);
        }
        
        public global::UserScript.Service.AlignmentAreaScanResponse @__SSC_DoRectAreaScan(string profile) {
            return base.Channel.@__SSC_DoRectAreaScan(profile);
        }
        
        public System.Threading.Tasks.Task<global::UserScript.Service.AlignmentAreaScanResponse> @__SSC_DoRectAreaScanAsync(string profile) {
            return base.Channel.@__SSC_DoRectAreaScanAsync(profile);
        }
        
        public global::UserScript.Service.AlignmentAreaScanResponse @__SSC_DoSlowRectAreaScan(string profile) {
            return base.Channel.@__SSC_DoSlowRectAreaScan(profile);
        }
        
        public System.Threading.Tasks.Task<global::UserScript.Service.AlignmentAreaScanResponse> @__SSC_DoSlowRectAreaScanAsync(string profile) {
            return base.Channel.@__SSC_DoSlowRectAreaScanAsync(profile);
        }
        
        public global::UserScript.Service.AlignmentNdResponse @__SSC_DoFast1D(string lmu, string axis, double interval, double range, double speed, string analogPort) {
            return base.Channel.@__SSC_DoFast1D(lmu, axis, interval, range, speed, analogPort);
        }
        
        public System.Threading.Tasks.Task<global::UserScript.Service.AlignmentNdResponse> @__SSC_DoFast1DAsync(string lmu, string axis, double interval, double range, double speed, string analogPort) {
            return base.Channel.@__SSC_DoFast1DAsync(lmu, axis, interval, range, speed, analogPort);
        }
        
        public global::UserScript.Service.AlignmentNdResponse @__SSC_DoFastND(string profile) {
            return base.Channel.@__SSC_DoFastND(profile);
        }
        
        public System.Threading.Tasks.Task<global::UserScript.Service.AlignmentNdResponse> @__SSC_DoFastNDAsync(string profile) {
            return base.Channel.@__SSC_DoFastNDAsync(profile);
        }
        
        public global::UserScript.Service.AlignmentAngleTuningResponse @__SSC_DoFastAngleTuning(string profile) {
            return base.Channel.@__SSC_DoFastAngleTuning(profile);
        }
        
        public System.Threading.Tasks.Task<global::UserScript.Service.AlignmentAngleTuningResponse> @__SSC_DoFastAngleTuningAsync(string profile) {
            return base.Channel.@__SSC_DoFastAngleTuningAsync(profile);
        }
        
        public global::UserScript.Service.AlignmentCentralAlignResponse @__SSC_DoFastCentralAlign(string profile) {
            return base.Channel.@__SSC_DoFastCentralAlign(profile);
        }
        
        public System.Threading.Tasks.Task<global::UserScript.Service.AlignmentCentralAlignResponse> @__SSC_DoFastCentralAlignAsync(string profile) {
            return base.Channel.@__SSC_DoFastCentralAlignAsync(profile);
        }
        
        public global::UserScript.Service.AlignmentAngleTuningResponse @__SSC_DoFastAngleTuningWithParam(string lmu, string linearAxis, double linearInterval, double linearRange, double speed, double pitch, string analogPort, string analogPort2, string rotatingAxis, double tuningFactor, int rotatingSpeed) {
            return base.Channel.@__SSC_DoFastAngleTuningWithParam(lmu, linearAxis, linearInterval, linearRange, speed, pitch, analogPort, analogPort2, rotatingAxis, tuningFactor, rotatingSpeed);
        }
        
        public System.Threading.Tasks.Task<global::UserScript.Service.AlignmentAngleTuningResponse> @__SSC_DoFastAngleTuningWithParamAsync(string lmu, string linearAxis, double linearInterval, double linearRange, double speed, double pitch, string analogPort, string analogPort2, string rotatingAxis, double tuningFactor, int rotatingSpeed) {
            return base.Channel.@__SSC_DoFastAngleTuningWithParamAsync(lmu, linearAxis, linearInterval, linearRange, speed, pitch, analogPort, analogPort2, rotatingAxis, tuningFactor, rotatingSpeed);
        }
        
        public global::UserScript.Service.AlignmentNdResponse @__SSC_DoProfile1D(string lmu, string axis, double interval, double range, double speed, string equipment) {
            return base.Channel.@__SSC_DoProfile1D(lmu, axis, interval, range, speed, equipment);
        }
        
        public System.Threading.Tasks.Task<global::UserScript.Service.AlignmentNdResponse> @__SSC_DoProfile1DAsync(string lmu, string axis, double interval, double range, double speed, string equipment) {
            return base.Channel.@__SSC_DoProfile1DAsync(lmu, axis, interval, range, speed, equipment);
        }
        
        public global::UserScript.Service.AlignmentNdResponse @__SSC_DoProfileND(string profile) {
            return base.Channel.@__SSC_DoProfileND(profile);
        }
        
        public System.Threading.Tasks.Task<global::UserScript.Service.AlignmentNdResponse> @__SSC_DoProfileNDAsync(string profile) {
            return base.Channel.@__SSC_DoProfileNDAsync(profile);
        }
        
        public global::UserScript.Service.AlignmentAngleTuningResponse @__SSC_DoAngleTuning(string profile) {
            return base.Channel.@__SSC_DoAngleTuning(profile);
        }
        
        public System.Threading.Tasks.Task<global::UserScript.Service.AlignmentAngleTuningResponse> @__SSC_DoAngleTuningAsync(string profile) {
            return base.Channel.@__SSC_DoAngleTuningAsync(profile);
        }
        
        public global::UserScript.Service.AlignmentCentralAlignResponse @__SSC_DoCentralAlign(string profile) {
            return base.Channel.@__SSC_DoCentralAlign(profile);
        }
        
        public System.Threading.Tasks.Task<global::UserScript.Service.AlignmentCentralAlignResponse> @__SSC_DoCentralAlignAsync(string profile) {
            return base.Channel.@__SSC_DoCentralAlignAsync(profile);
        }
        
        public void @__SSC_DoHillClimb(string profile) {
            base.Channel.@__SSC_DoHillClimb(profile);
        }
        
        public System.Threading.Tasks.Task @__SSC_DoHillClimbAsync(string profile) {
            return base.Channel.@__SSC_DoHillClimbAsync(profile);
        }
        
        public void @__SSC_Powermeter_SetUnit(string caption, global::UserScript.Service.SSC_PMUnitEnum unit) {
            base.Channel.@__SSC_Powermeter_SetUnit(caption, unit);
        }
        
        public System.Threading.Tasks.Task @__SSC_Powermeter_SetUnitAsync(string caption, global::UserScript.Service.SSC_PMUnitEnum unit) {
            return base.Channel.@__SSC_Powermeter_SetUnitAsync(caption, unit);
        }
        
        public global::UserScript.Service.SSC_PMUnitEnum @__SSC_Powermeter_GetUnit(string caption) {
            return base.Channel.@__SSC_Powermeter_GetUnit(caption);
        }
        
        public System.Threading.Tasks.Task<global::UserScript.Service.SSC_PMUnitEnum> @__SSC_Powermeter_GetUnitAsync(string caption) {
            return base.Channel.@__SSC_Powermeter_GetUnitAsync(caption);
        }
        
        public void @__SSC_Powermeter_SetRange(string caption, global::UserScript.Service.SSC_PMRangeEnum range) {
            base.Channel.@__SSC_Powermeter_SetRange(caption, range);
        }
        
        public System.Threading.Tasks.Task @__SSC_Powermeter_SetRangeAsync(string caption, global::UserScript.Service.SSC_PMRangeEnum range) {
            return base.Channel.@__SSC_Powermeter_SetRangeAsync(caption, range);
        }
        
        public global::UserScript.Service.SSC_PMRangeEnum @__SSC_Powermeter_GetRange(string caption) {
            return base.Channel.@__SSC_Powermeter_GetRange(caption);
        }
        
        public System.Threading.Tasks.Task<global::UserScript.Service.SSC_PMRangeEnum> @__SSC_Powermeter_GetRangeAsync(string caption) {
            return base.Channel.@__SSC_Powermeter_GetRangeAsync(caption);
        }
    }
}
